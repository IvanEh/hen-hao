<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2000-2015 hybris AG
 All rights reserved.

 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:file="http://www.springframework.org/schema/integration/file"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/integration
	http://www.springframework.org/schema/integration/spring-integration.xsd
	http://www.springframework.org/schema/integration/file
	http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>

    <bean id="baseDirectoryOrganisations" class="java.lang.String">
        <constructor-arg value="#{baseDirectory}/${tenantId}/organisations" />
    </bean>

    <!-- 1) Scan for files -->
    <file:inbound-channel-adapter id="batchFilesOrganisations" directory="#{baseDirectoryOrganisations}"
                                  filename-regex="^(.*)-(\d+)\.csv" comparator="fileOrderComparator">
        <int:poller fixed-rate="1000" />
    </file:inbound-channel-adapter>

    <!-- 2) move the file to processing and create header -->
    <file:outbound-gateway request-channel="batchFilesOrganisations"
                           reply-channel="batchFilesTrainingProc"
                           directory="#{baseDirectoryOrganisations}/processing" delete-source-files="true" />

    <int:service-activator input-channel="batchFilesTrainingProc" output-channel="batchFilesHeaderInit"
                           ref="trainingHeaderSetupTask" method="execute" />

<bean id="trainingHeaderSetupTask" class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderSetupTask">
        <property name="catalog" value="apparelProductCatalog" />
        <property name="net" value="false" />
        <property name="storeBaseDirectory" ref="baseDirectoryApparel" />
    </bean>


    <!-- Transformer converters mappings -->
    <bean id="batchApparelProductConverterMapping"
          class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
          p:mapping="organisation"
          p:converter-ref="batchOrganisationConverter"/>

    <bean id="batchOrganisationConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
        <property name="header">
            <value>
                INSERT_UPDATE Organisation;
                # Insert Organisationid[unique=true];email;name[lang=en];phone
            </value>
        </property>
        <property name="impexRow">
            <value>;{+0};{1};{+2};{3};{S}</value>
        </property>
    </bean>

    <!--<bean id="batchCustomerConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">-->
        <!--<property name="header">-->
            <!--<value>-->
                <!--# Insert Organisation-->
                <!--INSERT_UPDATE Customer;id[unique=true];email;name[lang=en];phone-->
            <!--</value>-->
        <!--</property>-->
        <!--<property name="impexRow">-->
            <!--<value>;{+0};{1};{+2};{3};{S}</value>-->
        <!--</property>-->
    <!--</bean>-->
</beans>